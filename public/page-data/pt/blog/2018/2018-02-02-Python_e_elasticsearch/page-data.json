{"componentChunkName":"component---src-templates-blog-post-js","path":"/pt/blog/2018/2018-02-02-Python_e_elasticsearch/","result":{"data":{"site":{"siteMetadata":{"title":null,"siteUrl":"https://vcrmartinez.com","social":{"twitter":"vcrmartinez","github":"victormartinez","linkedin":"vcrmartinez","speakerdeck":"victormartinez"}}},"markdownRemark":{"id":"564e307b-8750-5c9f-9518-86973fabdcc9","excerpt":"Então você tem muitos documentos e precisa buscar com rapidez, certo? Ou você tem muitos dados e precisa processar e extrair métricas. De qualquer jeito…","html":"<p>Então você tem muitos documentos e precisa buscar com rapidez, certo? Ou você tem muitos dados e precisa processar e extrair métricas. De qualquer jeito, Elasticsearch (ES) pode ser um poderoso motor para ajudá-lo a indexar, buscar e extrair métricas dos seu armazenamento orientado a documentos. Este post é bem direto e pretende apresentar como usar a linguagem Python para interagir com o motor e indexar, retornar e buscar documentos.</p>\n<p>A comunidade python desenvolveu dois projetos bem conhecidos: <a href=\"http://elasticsearch-py.readthedocs.io/\">elasticsearch-py</a> e <a href=\"http://elasticsearch-dsl.readthedocs.io/\">elasticsearch-dsl</a>. Enquanto o primeiro provê algumas ferramentas para interagir com ES e, na minha humilde opinião, para ter um controle mais granular das ações, o último foi criado para ajudá-lo com a busca e a persistência.</p>\n<h2>Conexão</h2>\n<p>A primeira questão é: como eu conector com o ES? Ao usar <code class=\"language-text\">elasticsearch-dsl</code> você pode criar uma conexão <em>default</em> que será usada globalmente:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">connections<span class=\"token punctuation\">.</span>create_connection<span class=\"token punctuation\">(</span>hosts<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'localhost'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Entretando, você pode querer usar um cliente e ter um controle mais granual. Ao usar o <code class=\"language-text\">elasticsearch-py</code> você consegue isso:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> elasticsearch <span class=\"token keyword\">import</span> Elasticsearch\n\nclient <span class=\"token operator\">=</span> Elasticsearch<span class=\"token punctuation\">(</span>hosts<span class=\"token punctuation\">,</span> http_auth<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Execute <code class=\"language-text\">client.indices.get_alias(&quot;*&quot;)</code> para retornar os índices existentes e checar se está propriamente configurado.</p>\n<h2>Persistência</h2>\n<p>Armazenar documentos é fácil pois <code class=\"language-text\">elasticsearch-dsl</code> provê <code class=\"language-text\">DocType</code> – uma classe que cuida de mapear sua classe python para documentos JSON. Ao invés de preocupar-se com estruturas JSON, vamos criar um documento que armazena o o acesso de um usuário a uma página específica:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> elasticsearch_dsl <span class=\"token keyword\">import</span> DocType<span class=\"token punctuation\">,</span> Integer<span class=\"token punctuation\">,</span> Date<span class=\"token punctuation\">,</span> Keyword\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">UserHit</span><span class=\"token punctuation\">(</span>DocType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    page <span class=\"token operator\">=</span> Keyword<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    datetime <span class=\"token operator\">=</span> Date<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    user_id <span class=\"token operator\">=</span> Integer<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    environment <span class=\"token operator\">=</span> Keyword<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Preste atenção aos campos que escolhemos: Integer, Date, Keyword. Eles serão mapeados para o motor do Elasticsearch, o que significa que você pode usar algumas features específicas. Por exemplo, o campo datetime pode ser usado para buscar um intervalo de datas ou agregar os dados por minutos, horas, dias, meses. Outro detalhe é o campo <code class=\"language-text\">environment</code>: é uma solução para integrar o ES com diferentes ambientes (homologação, desenvolvimento e produção). Dessa forma você não corre o risco de misturar dados falsos com os de produção.</p>\n<p><strong>Atualizado em 4 de Fev:</strong>: Uma outra estratégia é criar índices concatenados com o ambiente de produção. Ao utilizar uma variável de ambiente sua aplicação pode criar diferentes índices (e.g. myindex-2018.02.01-production, myindex-2018.02.01-staging, myindex-2018.02.01-development). Obrigado pela contribuição, Robson Peixoto.</p>\n<p>Uma vez que você criou a classe, a indexação se torna fácil:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">user_hit <span class=\"token operator\">=</span> UserHit<span class=\"token punctuation\">(</span>\n    page<span class=\"token operator\">=</span><span class=\"token string\">'product-list'</span><span class=\"token punctuation\">,</span>\n    datetime<span class=\"token operator\">=</span>datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    user_id<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n    environment<span class=\"token operator\">=</span><span class=\"token string\">'production'</span>\n<span class=\"token punctuation\">)</span>\n\nUserHit<span class=\"token punctuation\">.</span>init<span class=\"token punctuation\">(</span>using<span class=\"token operator\">=</span>client<span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span>index_name<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Indexed can be True or False depending on the operation success</span>\nindexed <span class=\"token operator\">=</span> user_hit<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span>using<span class=\"token operator\">=</span>client<span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span><span class=\"token string\">'myindex-2018.02.01'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Você tem que ser atento a duas questões: (i) antes de usar o documento você precisa garantir que o mapeamento no Elasticsearch está criado e é por isso que nós temos que usar o método <code class=\"language-text\">init</code> na linha 8; (ii) o retorno da operação uma vez que o método <code class=\"language-text\">.save</code> pode retornar ou <code class=\"language-text\">True</code> ou <code class=\"language-text\">False</code>.</p>\n<h2>Buscar</h2>\n<p>Como buscar os documentos? O trecho de código abaixo ilustra um exemplo simples.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> elasticsearch_dsl <span class=\"token keyword\">import</span> Search\n<span class=\"token keyword\">from</span> elasticsearch <span class=\"token keyword\">import</span> ElasticsearchException\n\n\nsearch <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>Search<span class=\"token punctuation\">(</span>using<span class=\"token operator\">=</span>client<span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span><span class=\"token string\">'myindex-2018.02.01'</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span><span class=\"token string\">'datetime'</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">(</span><span class=\"token string\">'match'</span><span class=\"token punctuation\">,</span> page<span class=\"token operator\">=</span><span class=\"token string\">'product-list'</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">(</span><span class=\"token string\">'match'</span><span class=\"token punctuation\">,</span> user_id<span class=\"token operator\">=</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">(</span><span class=\"token string\">'match'</span><span class=\"token punctuation\">,</span> environment<span class=\"token operator\">=</span><span class=\"token string\">'production'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\ncount <span class=\"token operator\">=</span> search<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nsearch <span class=\"token operator\">=</span> search<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span>count<span class=\"token punctuation\">]</span>\n\nresponse <span class=\"token operator\">=</span> search<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> response<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">raise</span> ElasticsearchException<span class=\"token punctuation\">(</span><span class=\"token string\">'Fail to get the hits'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span>hits</code></pre></div>\n<p>É importante mencionar que o ES traz apenas <em>10 resultados por padrão e é por isso que precisamos das linhas 11 e 12</em> .</p>\n<h2>Filtrando Resultados</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">search <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>Search<span class=\"token punctuation\">(</span>using<span class=\"token operator\">=</span>client<span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span><span class=\"token string\">'myindex-2018.02.01'</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span><span class=\"token string\">'datetime'</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">(</span><span class=\"token string\">'match'</span><span class=\"token punctuation\">,</span> page<span class=\"token operator\">=</span><span class=\"token string\">'product-list'</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">(</span><span class=\"token string\">'match'</span><span class=\"token punctuation\">,</span> user_id<span class=\"token operator\">=</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">(</span><span class=\"token string\">'match'</span><span class=\"token punctuation\">,</span> environment<span class=\"token operator\">=</span><span class=\"token string\">'production'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nsearch <span class=\"token operator\">=</span> search<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span><span class=\"token string\">'range'</span><span class=\"token punctuation\">,</span> datetime<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'gte'</span><span class=\"token punctuation\">:</span> from_datetime<span class=\"token punctuation\">,</span> <span class=\"token string\">'lte'</span><span class=\"token punctuation\">:</span> to_datetime<span class=\"token punctuation\">,</span> <span class=\"token string\">'time_zone'</span><span class=\"token punctuation\">:</span> time_zone_delta<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\ncount <span class=\"token operator\">=</span> search<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span>\n\nsearch <span class=\"token operator\">=</span> search<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span>count<span class=\"token punctuation\">]</span>\n\nresponse <span class=\"token operator\">=</span> search<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>hits<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Você acabou de buscar, mas agora quer filtrar os resultados por um intervalo de data. A linha 7 faz o truque.</p>\n<h2>Agregando</h2>\n<p>Você pode gerar métricas baseadas em data, por exemplo. A linha 12 diz para o ES agrugar os dados por intervalos de 30 minutos.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> elasticsearch_dsl <span class=\"token keyword\">import</span> Search\n<span class=\"token keyword\">from</span> elasticsearch <span class=\"token keyword\">import</span> ElasticsearchException\n\n\nsearch <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>Search<span class=\"token punctuation\">(</span>using<span class=\"token operator\">=</span>client<span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span><span class=\"token string\">'myindex-2018.02.01'</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span><span class=\"token string\">'datetime'</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">(</span><span class=\"token string\">'match'</span><span class=\"token punctuation\">,</span> page<span class=\"token operator\">=</span><span class=\"token string\">'product-list'</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">(</span><span class=\"token string\">'match'</span><span class=\"token punctuation\">,</span> user_id<span class=\"token operator\">=</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">(</span><span class=\"token string\">'match'</span><span class=\"token punctuation\">,</span> environment<span class=\"token operator\">=</span><span class=\"token string\">'production'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nsearch <span class=\"token operator\">=</span> search<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span><span class=\"token string\">'range'</span><span class=\"token punctuation\">,</span> datetime<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'gte'</span><span class=\"token punctuation\">:</span> from_datetime<span class=\"token punctuation\">,</span> <span class=\"token string\">'lte'</span><span class=\"token punctuation\">:</span> to_datetime<span class=\"token punctuation\">,</span> <span class=\"token string\">'time_zone'</span><span class=\"token punctuation\">:</span> time_zone_delta<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\nsearch<span class=\"token punctuation\">.</span>aggs<span class=\"token punctuation\">.</span>bucket<span class=\"token punctuation\">(</span><span class=\"token string\">'datetime'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'date_histogram'</span><span class=\"token punctuation\">,</span> field<span class=\"token operator\">=</span><span class=\"token string\">'datetime'</span><span class=\"token punctuation\">,</span> interval<span class=\"token operator\">=</span><span class=\"token string\">'30m'</span><span class=\"token punctuation\">)</span>\n\ncount <span class=\"token operator\">=</span> search<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nsearch <span class=\"token operator\">=</span> search<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span>count<span class=\"token punctuation\">]</span>\n\nres <span class=\"token operator\">=</span> search<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> response<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">raise</span> ElasticsearchException<span class=\"token punctuation\">(</span><span class=\"token string\">'Fail to get the hits'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span>aggs<span class=\"token punctuation\">[</span><span class=\"token string\">'datetime'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'buckets'</span><span class=\"token punctuation\">]</span></code></pre></div>","frontmatter":{"title":"Python + Elasticsearch","date":"2018-02-02T00:00:00.000Z","description":null,"tags":["elasticsearch","python"],"rating":null,"image_url":null,"image_author":null},"fields":{"slug":"/2018/2018-02-02-Python_e_elasticsearch/"},"timeToRead":3}},"pageContext":{"id":"564e307b-8750-5c9f-9518-86973fabdcc9","language":"pt","intl":{"language":"pt","languages":["en","pt"],"messages":{"of":"de","or":"ou","Next":"Próximo","Previous":"Anterior","reading":"leitura","Comments":"Comentários","Featured_image_credits":"Créditos da imagem de destaque","Not_Found":"Não Encontrado","Not_Found_Text":"A página que você está procurando pode ter sido removida, ter seu nome alterado ou estar temporariamente indisponível.","Not_Found_Nav":"Você pode ir para","Warning_deprecated":"Atenção: esse post foi escrito a algum tempo e pode não ser mais válido, ok?"},"routed":true,"originalPath":"/blog/2018/2018-02-02-Python_e_elasticsearch/","redirect":true,"defaultLanguage":"en"}}},"staticQueryHashes":["2841359383"]}
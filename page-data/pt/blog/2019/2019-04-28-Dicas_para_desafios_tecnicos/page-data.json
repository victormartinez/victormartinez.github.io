{"componentChunkName":"component---src-templates-blog-post-js","path":"/pt/blog/2019/2019-04-28-Dicas_para_desafios_tecnicos/","result":{"data":{"site":{"siteMetadata":{"title":null,"siteUrl":"https://vcrmartinez.com","social":{"twitter":"vcrmartinez","github":"victormartinez","linkedin":"vcrmartinez","speakerdeck":"victormartinez"}}},"markdownRemark":{"id":"2911509d-b1cc-5a51-af46-cf97d98f0abc","excerpt":"É comum que programadores enfrentem um desafio técnico nos processos de recrutamento. O desafio consiste em tarefas de programação projetadas para avaliar…","html":"<p>É comum que programadores enfrentem um desafio técnico nos processos de recrutamento. O desafio consiste em tarefas de programação projetadas para avaliar candidatos, principalmente, em relação às hard skills (por exemplo, habilidade de programação, arquitetura de software, etc.) Normalmente, o processo é composto por três fases: (i) especificação; (ii) desenvolvimento; (iii) revisão. Existem idiossincrasias e dicas para cada um deles.</p>\n<p>Depois de passar por desafios de codificação e, principalmente, avaliar alguns deles na <a href=\"www.onyo.com\">Onyo</a>, decidi escrever este post e compartilhar algumas lições que aprendi.</p>\n<h2>Especificação</h2>\n<p>O candidato recebe um e-mail ou documento especificando o escopo do desafio. Geralmente são listados os requisitos, restrições e o que fazer / não fazer. Se você for um desenvolvedor back-end, por exemplo, pode ser solicitado desenvolver uma API REST / GraphQL, um SaaS ou uma integração com um terceiro. <strong>O segredo do sucesso é estar muito atento ao que você precisa fazer. O planejamento é vital.</strong></p>\n<h3>Leia atentamente as especificações</h3>\n<p>Não assuma nada a respeito do que você tem que fazer. Reserve um tempo para ler cada linha do documento e preste atenção <strong>aos requisitos</strong>.</p>\n<h3>Planeje a execução</h3>\n<p>Em primeiro lugar, diferencie o que é <strong>obrigatório</strong> do que é <strong>bom / extra</strong>. Além disso, pense em quais bibliotecas você vai usar e como vai arquitetar seu código. É importante traçar um plano em relação aos seus resultados e estabelecer etapas / fases que serão iteradas, por exemplo: (i) montagem do projeto; (ii) CRUD; (iii) lógica de negócios 1; (iv) lógica de negócios 2; e assim por diante. Dessa forma, você reduz o risco de não realizar um projeto em execução.</p>\n<h3>Alguma dúvida? Pergunte!</h3>\n<p>A especificação não deve ter ambigüidades, mas nem sempre é assim. Sinta-se à vontade para questionar qualquer coisa que você não tenha entendido.</p>\n<h3>Não tenha medo de negociar o prazo</h3>\n<p>Os prazos são complicados em qualquer processo de recrutamento porque diversos fatores podem influenciar a rapidez com que se desenvolve a solução: (i) a sua proficiência na linguagem de progração / plataforma / etc; (ii) se você já está empregado e o fará em seu tempo livre; (iii) seu conhecimento sobre o domínio do problema. Se a empresa estabelece o prazo, não tenha medo de expor seu contexto e negociar o prazo.</p>\n<h2>Desenvolvimento</h2>\n<p>Depois de ler a especificação e planejar a execução, é hora de colocar a mão na massa. Existem muitas dicas para ficar de olho.</p>\n<h3>KISS (Keep it simple, stupid!)</h3>\n<p>Evite tanto quanto possível o excesso de engenharia e abstrações desnecessárias. Seu código deve ser fácil de seguir. Problemas difíceis geralmente exigem soluções simples.</p>\n<h3>Docs (README)</h3>\n<p>É obrigatório um bom README. Certifique-se de explicitar: (i) como executar o código; (ii) como usar ou interagir com ele; (iii) como executar os testes; (iv) onde você disponibilizou (se você fez deploy em algum lugar).</p>\n<h3>Commits</h3>\n<p>Use frases significativaas para seus commits. O revisor verificará seus commits para analisar como você concebeu a solução.</p>\n<h3>Use boas práticas</h3>\n<ul>\n<li>Favorecer abstrações que fizerem sentido</li>\n<li>Don’t Repeat Yourself (DRY)</li>\n<li>Siga os princípios de SOLID</li>\n<li>Composição sobre herança</li>\n<li>Modularização</li>\n<li>Coesão</li>\n<li>etc.</li>\n</ul>\n<p>As boas práticas podem ser resumidas em:</p>\n<ol>\n<li>Separe as responsabilidades em diferentes componentes</li>\n<li>Não espalhe a lógica de negócios</li>\n<li>Use as convenções de sua linguagem de programação</li>\n<li>Nomeie as coisas corretamente (classes, variáveis, etc)</li>\n<li>Use comentários apenas em partes críticas</li>\n<li>Evite engenharia excessiva e abstrações desnecessárias</li>\n</ol>\n<h3>Nomenclatura</h3>\n<p><strong>Certifique-se de que seu código seja semântico.</strong> Classes, variáveis, funções, métodos devem ser nomeados corretamente de forma que o leitor compreenda facilmente o propósito.</p>\n<h3>Testes</h3>\n<p>Escreva pelo menos testes de unidade e disponibilize-os para execução a qualquer momento. Atingir uma alta porcentagem de cobertura de código pode ser difícil. Portanto, certifique-se de cobrir pelo menos as partes críticas de seu desafio.</p>\n<h3>Tenha cuidado com o trabalho extra</h3>\n<p>Alguns candidatos decidem impressionar os recrutadores implementando funcionalidades extras. Tenha cuidado com isso porque você pode arriscar seu desafio ao não concluir o que importa: a solução de acordo com a especificação.</p>\n<h3>Faça funcionar, teste e refatore</h3>\n<p>Não gaste muito esforço em fazer a melhor solução no início. Em vez disso, (1) crie uma solução simples, (2) teste e (3) refatore.</p>\n<h2>Revisão</h2>\n<p>Finalmente, é hora de revisar seu código. Nesta fase a empresa pode te pedir (ou não) para apresentar a solução. Em qualquer caso, seu código será revisado e é importante que você <strong>esteja aberto a críticas construtivas e ter em mente as decisões técnicas que você tomou.</strong></p>\n<h3>Seja humilde</h3>\n<p>Independentemente da sua posição (estagiário, júnior, pleno ou sênior) <strong>ser humilde é o comportamento mais inteligente que você pode adotar</strong>. Sua solução: (i) pode ter falhas; (ii) não cobrir alguns aspectos; (ii) pode ser melhorada; (iv) não estar preparada para uma situação específica. <strong>Tudo bem!</strong> Aceite as críticas construtivas e tenha em mente que programação é um caminho de aprendizado constante.</p>\n<h3>Não finja</h3>\n<p>Não finja saber algo que você realmente não sabe, porque você pode ser questionado sobre coisas que não será capaz de responder e criar uma atmosfera de desconfiança.</p>\n<h3>A comunicação é importante</h3>\n<p>Você ganha pontos dependendo da forma como apresenta a solução. Uma boa abordagem é dar uma visão geral da solução e, depois disso, entrar nos detalhes do que é importante (por exemplo, lógica de negócios). Durante esse momento, explique sobre as decisões técnicas que você tomou.</p>\n<h3>Questões importantes para manter em mente</h3>\n<p>Muitas perguntas podem ser feitas na revisão: O que poderia ser melhorado? O que você faria de diferente? A sua solução é escalável? O que você não gostou em relação à sua implementação?</p>\n<p>É bom estar preparado para eles e refletir sobre o que você poderia fazer melhor.</p>","frontmatter":{"title":"Dicas para desafios técnicos","date":"2019-04-28T00:00:00\"","description":null,"tags":["carreira","coding","desafio","técnico"],"image_url":"https://unsplash.com/photos/dMUt0X3f59Q","image_author":"Fabian Grohs","image":{"publicURL":"/static/3321092e05d9ff607b38decf25d670ff/featured.jpg"}},"fields":{"slug":"/2019/2019-04-28-Dicas_para_desafios_tecnicos/"},"timeToRead":4}},"pageContext":{"id":"2911509d-b1cc-5a51-af46-cf97d98f0abc","language":"pt","intl":{"language":"pt","languages":["pt"],"messages":{"of":"de","or":"ou","Next":"Próximo","Previous":"Anterior","reading":"leitura","Comments":"Comentários","Featured_image_credits":"Créditos da imagem de destaque","Not_Found":"Não Encontrado","Not_Found_Text":"A página que você está procurando pode ter sido removida, ter seu nome alterado ou estar temporariamente indisponível.","Not_Found_Nav":"Você pode ir para","Warning_deprecated":"Atenção: esse post foi escrito a algum tempo e pode não ser mais válido, ok?"},"routed":true,"originalPath":"/blog/2019/2019-04-28-Dicas_para_desafios_tecnicos/","redirect":true,"defaultLanguage":"pt"}}},"staticQueryHashes":["4061151221"]}
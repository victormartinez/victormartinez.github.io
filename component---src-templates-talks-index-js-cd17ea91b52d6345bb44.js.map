{"version":3,"sources":["webpack:///./src/components/TalkItem/styled.js","webpack:///./src/components/TalkItem/index.js","webpack:///./src/templates/talks-index.js"],"names":["TalkItemWrapper","styled","article","media","lessThan","ImageSection","div","Url","Link","Image","Img","greaterThan","between","TextSection","section","Header","header","Title","h2","BodyItems","ul","Item","li","TalkItem","span","title","date","image","slides","event","where","video","website","fluid","childImageSharp","to","target","rel","Date","toLocaleString","slice","pageQuery","TalksIndex","data","intl","useIntl","siteTitle","site","siteMetadata","locale","talks","noPosts","description","social","posts","nodes","author","name","keywords","allFile","edges","node","publicURL","length","LayoutContent","meta","property","content","join","Paragraph","text","itemscope","itemtype","map","post","key","fields","slug","frontmatter"],"mappings":"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","file":"component---src-templates-talks-index-js-cd17ea91b52d6345bb44.js","sourcesContent":["import styled from \"styled-components\"\r\nimport media from \"styled-media-query\"\r\n\r\nimport { Link } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\n\r\nexport const TalkItemWrapper = styled.article`\r\n  background-color: #f3f3f3;\r\n  display: flex;\r\n  margin-bottom: 3em;\r\n\r\n  ${media.lessThan(\"medium\")`\r\n    flex-direction: column;\r\n    padding: 1em;\r\n  `};\r\n`\r\n\r\nexport const ImageSection = styled.div``\r\n\r\nexport const Url = styled(Link)``\r\n\r\nexport const Image = styled(Img)`\r\n  ${media.greaterThan(\"small\")`\r\n    width: 20em;\r\n    height: 12em;\r\n  `}\r\n\r\n  ${media.between(\"small\", \"medium\")`\r\n    width: 95vw;\r\n    height: 25vh;\r\n  `}\r\n`\r\n\r\nexport const TextSection = styled.section`\r\n  width: 100%;\r\n  padding: 1em 1em 0em 1.5em;\r\n`\r\n\r\nexport const Header = styled.header`\r\n  margin-bottom: 1em;\r\n`\r\n\r\nexport const Title = styled.h2`\r\n  font-size: 1.2rem;\r\n  font-weight: 600;\r\n`\r\n\r\nexport const BodyItems = styled.ul`\r\n  list-style-type: disc;\r\n  padding-left: 1em;\r\n`\r\n\r\nexport const Item = styled.li`\r\n  margin-bottom: 0.6em;\r\n`\r\n\r\nexport const ItemText = styled.span``\r\n","import React from \"react\"\r\n\r\nimport * as S from \"./styled\"\r\n\r\nconst TalkItem = ({\r\n  title,\r\n  date,\r\n  image,\r\n  slides,\r\n  event,\r\n  where,\r\n  video,\r\n  website,\r\n}) => {\r\n  return (\r\n    <S.TalkItemWrapper>\r\n      <S.ImageSection>\r\n        {image && <S.Image fluid={image?.childImageSharp.fluid} />}\r\n      </S.ImageSection>\r\n      <S.TextSection>\r\n        <S.Header>\r\n          <S.Title>{title}</S.Title>\r\n        </S.Header>\r\n        <S.BodyItems>\r\n          <S.Item>\r\n            Evento: \r\n            {\r\n              website && \r\n              <S.Url to={website} target=\"_blank\" rel=\"noopener noreferrer\"> {event}</S.Url>\r\n            }\r\n            { !website && event }\r\n          </S.Item>\r\n          <S.Item>Quando: { new Date(date).toLocaleString().slice(0, 10) }</S.Item>\r\n          <S.Item>Onde: {where}</S.Item>\r\n          {slides && <S.Item><S.Url to={slides} target=\"_blank\" rel=\"noopener noreferrer\"> Slides</S.Url></S.Item>}\r\n          {video && <S.Item><S.Url to={video} target=\"_blank\" rel=\"noopener noreferrer\"> Video</S.Url></S.Item>}\r\n        </S.BodyItems>\r\n      </S.TextSection>\r\n    </S.TalkItemWrapper>\r\n  )\r\n}\r\n\r\nexport default TalkItem\r\n","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport LayoutContent from \"../components/LayoutContent\"\r\nimport TalkItem from \"../components/TalkItem\"\r\nimport Paragraph from \"../components/Paragraph\"\r\nimport SEO from \"../components/seo\"\r\n\r\nimport { useIntl } from \"gatsby-plugin-intl\"\r\n\r\nconst TalksIndex = ({ data }) => {\r\n  const intl = useIntl()\r\n\r\n  const siteTitle = data.site.siteMetadata[intl.locale].talks.title\r\n  const noPosts = data.site.siteMetadata[intl.locale].noPosts\r\n  const description = data.site.siteMetadata[intl.locale].talks.description\r\n  const social = data.site.siteMetadata.social\r\n  const posts = data.talks.nodes\r\n  const author = data.site.siteMetadata.author.name\r\n  const keywords = data.site.siteMetadata.keywords\r\n  const image = data.allFile.edges[0].node.publicURL\r\n\r\n  if (posts.length === 0) {\r\n    return (\r\n      <LayoutContent\r\n        title={siteTitle}\r\n        description={description}\r\n        social={social}\r\n      >\r\n        <SEO\r\n          title={`${author} | ${siteTitle}`}\r\n          description={description}\r\n          image={image}\r\n          meta={[\r\n            {\r\n              property: `keywords`,\r\n              content: keywords.join(\", \"),\r\n            },\r\n          ]}\r\n        />\r\n        <Paragraph text={noPosts} />\r\n      </LayoutContent>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <LayoutContent\r\n      itemscope\r\n      itemtype=\"https://schema.org/Blog\"\r\n      title={siteTitle}\r\n      description={description}\r\n      social={social}\r\n    >\r\n      <SEO\r\n        title={`${author} | ${siteTitle}`}\r\n        description={`${siteTitle} ${description}`}\r\n        image={image}\r\n        meta={[\r\n          {\r\n            property: `keywords`,\r\n            content: keywords.join(\", \"),\r\n          },\r\n        ]}\r\n      />\r\n      {posts.map(post => {\r\n        return (\r\n          <TalkItem\r\n            key={post.fields.slug}  \r\n            title={post.frontmatter.title}  \r\n            date={post.frontmatter.date}\r\n            image={post.frontmatter.image}\r\n            slides={post.frontmatter.slides}\r\n            event={post.frontmatter.event}\r\n            where={post.frontmatter.where}\r\n            video={post.frontmatter.video}\r\n            website={post.frontmatter.website}\r\n          />\r\n        )\r\n      })}\r\n    </LayoutContent>\r\n  )\r\n}\r\n\r\nexport default TalksIndex\r\n\r\nexport const pageQuery = graphql`\r\n  query TalksList {\r\n    allFile(\r\n      filter: {\r\n        absolutePath: { regex: \"/content/assets/\" }\r\n        name: { eq: \"cover\" }\r\n      }\r\n    ) {\r\n      edges {\r\n        node {\r\n          name\r\n          publicURL\r\n        }\r\n      }\r\n    }\r\n    site {\r\n      siteMetadata {\r\n        author {\r\n          name\r\n        }\r\n        social {\r\n          twitter\r\n          github\r\n          linkedin\r\n          speakerdeck\r\n        }\r\n        keywords\r\n        pt {\r\n          noPosts\r\n          talks {\r\n            title\r\n            description\r\n          }\r\n        }\r\n      }\r\n    }\r\n    talks: allMarkdownRemark(\r\n      filter: {\r\n        fileAbsolutePath: { regex: \"/content/talks/\" }\r\n        frontmatter: { layout: { eq: \"talk\" } }\r\n      }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      nodes {\r\n        excerpt(pruneLength: 200)\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          date\r\n          title\r\n          slides\r\n          event\r\n          where\r\n          video\r\n          website\r\n          image {\r\n            publicURL\r\n            childImageSharp {\r\n              fluid(maxHeight: 368, maxWidth: 640) {\r\n                ...GatsbyImageSharpFluid_tracedSVG\r\n              }\r\n            }\r\n          }\r\n        }\r\n        timeToRead\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}
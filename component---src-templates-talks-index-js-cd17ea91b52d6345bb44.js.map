{"version":3,"sources":["webpack:///./src/components/TalkItem/styled.js","webpack:///./src/components/TalkItem/index.js","webpack:///./src/templates/talks-index.js"],"names":["TalkItemWrapper","styled","article","media","lessThan","ImageSection","div","Url","Link","Image","Img","greaterThan","between","TextSection","section","Header","header","Title","h2","BodyItems","ul","Item","li","TalkItem","span","title","date","image","slides","event","where","video","website","fluid","childImageSharp","to","target","rel","Date","toLocaleString","slice","pageQuery","TalksIndex","data","intl","useIntl","siteTitle","site","siteMetadata","locale","talks","noPosts","description","social","posts","nodes","author","name","keywords","allFile","edges","node","publicURL","length","LayoutContent","meta","property","content","join","Paragraph","text","itemscope","itemtype","map","post","key","fields","slug","frontmatter"],"mappings":"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","file":"component---src-templates-talks-index-js-cd17ea91b52d6345bb44.js","sourcesContent":["import styled from \"styled-components\"\nimport media from \"styled-media-query\"\n\nimport { Link } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nexport const TalkItemWrapper = styled.article`\n  background-color: #f3f3f3;\n  display: flex;\n  margin-bottom: 3em;\n\n  ${media.lessThan(\"medium\")`\n    flex-direction: column;\n    padding: 1em;\n  `};\n`\n\nexport const ImageSection = styled.div``\n\nexport const Url = styled(Link)``\n\nexport const Image = styled(Img)`\n  ${media.greaterThan(\"small\")`\n    width: 20em;\n    height: 12em;\n  `}\n\n  ${media.between(\"small\", \"medium\")`\n    width: 95vw;\n    height: 25vh;\n  `}\n`\n\nexport const TextSection = styled.section`\n  width: 100%;\n  padding: 1em 1em 0em 1.5em;\n`\n\nexport const Header = styled.header`\n  margin-bottom: 1em;\n`\n\nexport const Title = styled.h2`\n  font-size: 1.2rem;\n  font-weight: 600;\n`\n\nexport const BodyItems = styled.ul`\n  list-style-type: disc;\n  padding-left: 1em;\n`\n\nexport const Item = styled.li`\n  margin-bottom: 0.6em;\n`\n\nexport const ItemText = styled.span``\n","import React from \"react\"\n\nimport * as S from \"./styled\"\n\nconst TalkItem = ({\n  title,\n  date,\n  image,\n  slides,\n  event,\n  where,\n  video,\n  website,\n}) => {\n  return (\n    <S.TalkItemWrapper>\n      <S.ImageSection>\n        {image && <S.Image fluid={image?.childImageSharp.fluid} />}\n      </S.ImageSection>\n      <S.TextSection>\n        <S.Header>\n          <S.Title>{title}</S.Title>\n        </S.Header>\n        <S.BodyItems>\n          <S.Item>\n            Evento: \n            {\n              website && \n              <S.Url to={website} target=\"_blank\" rel=\"noopener noreferrer\"> {event}</S.Url>\n            }\n            { !website && event }\n          </S.Item>\n          <S.Item>Quando: { new Date(date).toLocaleString().slice(0, 10) }</S.Item>\n          <S.Item>Onde: {where}</S.Item>\n          {slides && <S.Item><S.Url to={slides} target=\"_blank\" rel=\"noopener noreferrer\"> Slides</S.Url></S.Item>}\n          {video && <S.Item><S.Url to={video} target=\"_blank\" rel=\"noopener noreferrer\"> Video</S.Url></S.Item>}\n        </S.BodyItems>\n      </S.TextSection>\n    </S.TalkItemWrapper>\n  )\n}\n\nexport default TalkItem\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport LayoutContent from \"../components/LayoutContent\"\nimport TalkItem from \"../components/TalkItem\"\nimport Paragraph from \"../components/Paragraph\"\nimport SEO from \"../components/seo\"\n\nimport { useIntl } from \"gatsby-plugin-intl\"\n\nconst TalksIndex = ({ data }) => {\n  const intl = useIntl()\n\n  const siteTitle = data.site.siteMetadata[intl.locale].talks.title\n  const noPosts = data.site.siteMetadata[intl.locale].noPosts\n  const description = data.site.siteMetadata[intl.locale].talks.description\n  const social = data.site.siteMetadata.social\n  const posts = data.talks.nodes\n  const author = data.site.siteMetadata.author.name\n  const keywords = data.site.siteMetadata.keywords\n  const image = data.allFile.edges[0].node.publicURL\n\n  if (posts.length === 0) {\n    return (\n      <LayoutContent\n        title={siteTitle}\n        description={description}\n        social={social}\n      >\n        <SEO\n          title={`${author} | ${siteTitle}`}\n          description={description}\n          image={image}\n          meta={[\n            {\n              property: `keywords`,\n              content: keywords.join(\", \"),\n            },\n          ]}\n        />\n        <Paragraph text={noPosts} />\n      </LayoutContent>\n    )\n  }\n\n  return (\n    <LayoutContent\n      itemscope\n      itemtype=\"https://schema.org/Blog\"\n      title={siteTitle}\n      description={description}\n      social={social}\n    >\n      <SEO\n        title={`${author} | ${siteTitle}`}\n        description={`${siteTitle} ${description}`}\n        image={image}\n        meta={[\n          {\n            property: `keywords`,\n            content: keywords.join(\", \"),\n          },\n        ]}\n      />\n      {posts.map(post => {\n        return (\n          <TalkItem\n            key={post.fields.slug}  \n            title={post.frontmatter.title}  \n            date={post.frontmatter.date}\n            image={post.frontmatter.image}\n            slides={post.frontmatter.slides}\n            event={post.frontmatter.event}\n            where={post.frontmatter.where}\n            video={post.frontmatter.video}\n            website={post.frontmatter.website}\n          />\n        )\n      })}\n    </LayoutContent>\n  )\n}\n\nexport default TalksIndex\n\nexport const pageQuery = graphql`\n  query TalksList {\n    allFile(\n      filter: {\n        absolutePath: { regex: \"/content/assets/\" }\n        name: { eq: \"cover\" }\n      }\n    ) {\n      edges {\n        node {\n          name\n          publicURL\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author {\n          name\n        }\n        social {\n          twitter\n          github\n          linkedin\n          speakerdeck\n        }\n        keywords\n        pt {\n          noPosts\n          talks {\n            title\n            description\n          }\n        }\n      }\n    }\n    talks: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"/content/talks/\" }\n        frontmatter: { layout: { eq: \"talk\" } }\n      }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      nodes {\n        excerpt(pruneLength: 200)\n        fields {\n          slug\n        }\n        frontmatter {\n          date\n          title\n          slides\n          event\n          where\n          video\n          website\n          image {\n            publicURL\n            childImageSharp {\n              fluid(maxHeight: 368, maxWidth: 640) {\n                ...GatsbyImageSharpFluid_tracedSVG\n              }\n            }\n          }\n        }\n        timeToRead\n      }\n    }\n  }\n`\n"],"sourceRoot":""}
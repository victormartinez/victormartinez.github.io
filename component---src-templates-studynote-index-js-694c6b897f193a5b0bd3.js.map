{"version":3,"sources":["webpack:///./src/components/PostItem/styled.js","webpack:///./src/components/PostItem/index.js","webpack:///./src/templates/studynote-index.js","webpack:///./src/components/Pagination/styled.js","webpack:///./src/components/Pagination/index.js","webpack:///./src/utils/date.js"],"names":["PostItemWrapper","styled","article","media","lessThan","ImageSection","div","PostLink","Link","Image","Img","greaterThan","between","TextSection","section","Header","header","Title","h2","Description","p","Metadata","Bullet","span","Date","ReadingTime","Footer","footer","FooterItem","PostItem","path","image","category","date","timeToRead","title","description","intl","useIntl","to","fluid","childImageSharp","formatDate","locale","formatMessage","id","StudyNotesIndex","data","pageContext","siteTitle","site","siteMetadata","studynotes","noPosts","social","posts","portugueseStudyNotes","nodes","author","name","keywords","allFile","edges","node","publicURL","currentPage","numPages","isFirst","isLast","prevPage","prevPageUrl","nextPage","nextPageUrl","length","meta","property","content","join","text","itemscope","itemtype","map","post","key","fields","slug","pageDetailUrl","frontmatter","excerpt","PaginationWrapper","PaginationPrevious","PaginationNext","PaginationPage","PaginationLink","PaginationText","Pagination","moment","require","isPostDeprecated","datetime","diff","format","formatted","toUpperCase","slice"],"mappings":"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","file":"component---src-templates-studynote-index-js-694c6b897f193a5b0bd3.js","sourcesContent":["import styled from \"styled-components\"\r\nimport media from \"styled-media-query\"\r\nimport { Link } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\n\r\nexport const PostItemWrapper = styled.article`\r\n  background-color: #f3f3f3;\r\n  display: flex;\r\n  margin-bottom: 3em;\r\n\r\n  ${media.lessThan(\"medium\")`\r\n    flex-direction: column;\r\n    padding: 1em;\r\n  `};\r\n`\r\n\r\nexport const ImageSection = styled.div``\r\n\r\nexport const PostLink = styled(Link)``\r\n\r\nexport const Image = styled(Img)`\r\n  ${media.greaterThan(\"small\")`\r\n    width: 25em;\r\n    height: 20em;\r\n  `}\r\n\r\n  ${media.between(\"small\", \"medium\")`\r\n    width: 95vw;\r\n    height: 25vh;\r\n  `}\r\n`\r\n\r\nexport const TextSection = styled.section`\r\n  width: 100vw;\r\n  padding: 1em 1.5em;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n\r\n  ${media.lessThan(\"small\")`\r\n    width: 95vw;\r\n  `};\r\n`\r\n\r\nexport const Header = styled.header`\r\n  margin-bottom: 1em;\r\n`\r\n\r\nexport const Title = styled.h2`\r\n  font-size: 1.8em;\r\n  font-weight: 600;\r\n  line-height: 1.5;\r\n`\r\n\r\nexport const Description = styled.p`\r\n  line-height: 1.8;\r\n  font-size: 1.1rem;\r\n  font-weight: 300;\r\n`\r\n\r\nexport const Metadata = styled.div`\r\n  margin: 0.5em 0;\r\n  font-weight: 300;\r\n  line-height: 1.8;\r\n  font-size: 1.1rem;\r\n`\r\n\r\nexport const Bullet = styled.span`\r\n  margin: 0 1em;\r\n`\r\n\r\nexport const Date = styled.span``\r\n\r\nexport const ReadingTime = styled.span``\r\n\r\nexport const Footer = styled.footer`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  height: 2em;\r\n  font-weight: 300;\r\n`\r\n\r\nexport const FooterItem = styled.p`\r\n  padding: 0.5em;\r\n  border-radius: 5%;\r\n  background-color: #5d5d5d;\r\n  color: white;\r\n`\r\n","import React from \"react\"\r\n\r\nimport { useIntl } from \"gatsby-plugin-intl\"\r\nimport { formatDate } from \"../../utils/date\"\r\nimport * as S from \"./styled\"\r\n\r\nconst PostItem = ({\r\n  path,\r\n  image,\r\n  category,\r\n  date,\r\n  timeToRead,\r\n  title,\r\n  description,\r\n}) => {\r\n  const intl = useIntl()\r\n\r\n  return (\r\n    <S.PostItemWrapper>\r\n      <S.ImageSection>\r\n        <S.PostLink to={path}>\r\n          {image && <S.Image fluid={image?.childImageSharp.fluid} />}\r\n        </S.PostLink>\r\n      </S.ImageSection>\r\n      <S.TextSection>\r\n        <S.Header>\r\n          <S.Title>\r\n            <S.PostLink to={path}>{title}</S.PostLink>\r\n          </S.Title>\r\n\r\n          <S.Metadata>\r\n            <S.Date>{formatDate(date, intl.locale)}</S.Date>\r\n            <S.Bullet>•</S.Bullet>\r\n            <S.ReadingTime>\r\n              {timeToRead} min {intl.formatMessage({ id: \"reading\" })}\r\n            </S.ReadingTime>\r\n          </S.Metadata>\r\n          <S.Description>{description}</S.Description>\r\n        </S.Header>\r\n        <S.Footer>\r\n          <S.FooterItem>{category}</S.FooterItem>\r\n        </S.Footer>\r\n      </S.TextSection>\r\n    </S.PostItemWrapper>\r\n  )\r\n}\r\n\r\nexport default PostItem\r\n","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport LayoutContent from \"../components/LayoutContent\"\r\nimport PostItem from \"../components/PostItem\"\r\nimport Pagination from \"../components/Pagination\"\r\nimport Paragraph from \"../components/Paragraph\"\r\nimport SEO from \"../components/seo\"\r\n\r\nimport { useIntl } from \"gatsby-plugin-intl\"\r\nimport {\r\n  pageDetailUrl,\r\n  nextPageUrl,\r\n  prevPageUrl,\r\n} from \"../utils/routing.js\"\r\n\r\nconst StudyNotesIndex = ({ data, pageContext }) => {\r\n  const intl = useIntl()\r\n  const routeName = 'studynotes';\r\n\r\n  const siteTitle = data.site.siteMetadata[intl.locale].studynotes.title\r\n  const noPosts = data.site.siteMetadata[intl.locale].noPosts\r\n  const description = data.site.siteMetadata[intl.locale].studynotes.description\r\n  const social = data.site.siteMetadata.social\r\n  const posts = data.portugueseStudyNotes.nodes\r\n  const author = data.site.siteMetadata.author.name\r\n  const keywords = data.site.siteMetadata.keywords\r\n  const image = data.allFile.edges[0].node.publicURL\r\n\r\n  const { currentPage, numPages } = pageContext\r\n  const isFirst = currentPage === 1\r\n  const isLast = currentPage === numPages\r\n  const prevPage = prevPageUrl(intl.locale, routeName, currentPage)\r\n  const nextPage = nextPageUrl(intl.locale, routeName, currentPage)\r\n\r\n  if (posts.length === 0) {\r\n    return (\r\n      <LayoutContent\r\n        title={siteTitle}\r\n        description={description}\r\n        social={social}\r\n      >\r\n        <SEO\r\n          title={`${author} | ${siteTitle}`}\r\n          description={description}\r\n          image={image}\r\n          meta={[\r\n            {\r\n              property: `keywords`,\r\n              content: keywords.join(\", \"),\r\n            },\r\n          ]}\r\n        />\r\n        <Paragraph text={noPosts} />\r\n      </LayoutContent>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <LayoutContent\r\n      itemscope\r\n      itemtype=\"https://schema.org/Blog\"\r\n      title={siteTitle}\r\n      description={description}\r\n      social={social}\r\n    >\r\n      <SEO\r\n        title={`${author} | ${siteTitle}`}\r\n        description={`${siteTitle} ${description}`}\r\n        image={image}\r\n        meta={[\r\n          {\r\n            property: `keywords`,\r\n            content: keywords.join(\", \"),\r\n          },\r\n        ]}\r\n      />\r\n      {posts.map(post => {\r\n        return (\r\n          <PostItem\r\n            key={post.fields.slug}\r\n            path={`${pageDetailUrl(intl.locale, routeName, post.fields.slug)}`}\r\n            title={post.frontmatter.title || post.fields.slug}\r\n            date={post.frontmatter.date}\r\n            description={post.frontmatter.description || post.excerpt}\r\n            timeToRead={post.timeToRead}\r\n            category={post.frontmatter.category}\r\n            image={post.frontmatter.image}\r\n          />\r\n        )\r\n      })}\r\n      <Pagination\r\n        isFirst={isFirst}\r\n        isLast={isLast}\r\n        currentPage={currentPage}\r\n        numPages={numPages}\r\n        prevPage={prevPage}\r\n        nextPage={nextPage}\r\n      />\r\n    </LayoutContent>\r\n  )\r\n}\r\n\r\nexport default StudyNotesIndex\r\n\r\nexport const pageQuery = graphql`\r\n  query StudyNotes($skip: Int!, $limit: Int!) {\r\n    allFile(\r\n      filter: {\r\n        absolutePath: { regex: \"/content/assets/\" }\r\n        name: { eq: \"cover\" }\r\n      }\r\n    ) {\r\n      edges {\r\n        node {\r\n          name\r\n          publicURL\r\n        }\r\n      }\r\n    }\r\n    site {\r\n      siteMetadata {\r\n        author {\r\n          name\r\n        }\r\n        social {\r\n          twitter\r\n          github\r\n          linkedin\r\n          speakerdeck\r\n        }\r\n        keywords\r\n        pt {\r\n          noPosts\r\n          studynotes {\r\n            title\r\n            description\r\n          }\r\n        }\r\n      }\r\n    }\r\n    portugueseStudyNotes: allMarkdownRemark(\r\n      filter: {\r\n        fileAbsolutePath: { regex: \"/content/studynotes/\" }\r\n        frontmatter: { layout: { eq: \"studynote\" } }\r\n      }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      limit: $limit\r\n      skip: $skip\r\n    ) {\r\n      nodes {\r\n        excerpt(pruneLength: 200)\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          date\r\n          title\r\n          description\r\n          category\r\n          image {\r\n            publicURL\r\n            childImageSharp {\r\n              fluid(maxHeight: 368, maxWidth: 640) {\r\n                ...GatsbyImageSharpFluid_tracedSVG\r\n              }\r\n            }\r\n          }\r\n        }\r\n        timeToRead\r\n      }\r\n    }\r\n  }\r\n`\r\n","import styled from \"styled-components\"\r\nimport media from \"styled-media-query\"\r\nimport { Link } from \"gatsby\"\r\n\r\nexport const PaginationWrapper = styled.section`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 1.5rem 3rem;\r\n  font-weight: 900;\r\n  padding: 2em 0;\r\n  height: 2em;\r\n  font-size: 1.1rem;\r\n\r\n  ${media.lessThan(\"medium\")`\r\n    padding: 2em 1em;\r\n  `}\r\n`\r\n\r\nexport const PaginationPrevious = styled.div`\r\n  width: 6em;\r\n  text-align: left;\r\n`\r\n\r\nexport const PaginationNext = styled.div`\r\n  width: 6em;\r\n  text-align: right;\r\n`\r\n\r\nexport const PaginationPage = styled.div`\r\n  width: 3em;\r\n`\r\n\r\nexport const PaginationLink = styled(Link)`\r\n  height: 1em;\r\n  width: 6em;\r\n`\r\n\r\nexport const PaginationText = styled.p`\r\n  color: #fff;\r\n`\r\n","import React from \"react\"\r\n\r\nimport propTypes from \"prop-types\"\r\nimport { useIntl } from \"gatsby-plugin-intl\"\r\n\r\nimport * as S from \"./styled\"\r\n\r\nconst Pagination = ({\r\n  isFirst,\r\n  isLast,\r\n  currentPage,\r\n  numPages,\r\n  prevPage,\r\n  nextPage,\r\n}) => {\r\n  const intl = useIntl()\r\n\r\n  return (\r\n    <S.PaginationWrapper>\r\n      <S.PaginationPrevious>\r\n        <S.PaginationLink to={isFirst ? \"#\" : prevPage}>\r\n          {isFirst ? null : `← ${intl.formatMessage({ id: \"Previous\" })}`}\r\n        </S.PaginationLink>\r\n      </S.PaginationPrevious>\r\n\r\n      <S.PaginationPage>\r\n        <S.PaginationText>\r\n          {currentPage} {intl.formatMessage({ id: \"of\" })} {numPages}\r\n        </S.PaginationText>\r\n      </S.PaginationPage>\r\n\r\n      <S.PaginationNext>\r\n        <S.PaginationLink to={isLast ? \"#\" : nextPage}>\r\n          {isLast ? null : `→ ${intl.formatMessage({ id: \"Next\" })}`}\r\n        </S.PaginationLink>\r\n      </S.PaginationNext>\r\n    </S.PaginationWrapper>\r\n  )\r\n}\r\n\r\nPagination.propTypes = {\r\n  isFirst: propTypes.bool.isRequired,\r\n  isLast: propTypes.bool.isRequired,\r\n  currentPage: propTypes.number.isRequired,\r\n  numPages: propTypes.number.isRequired,\r\n  prevPage: propTypes.string,\r\n  nextPage: propTypes.string,\r\n}\r\n\r\nexport default Pagination\r\n","const moment = require(\"moment\")\r\n\r\nexport const isPostDeprecated = datetime => {\r\n  const months = moment().diff(\r\n    moment(datetime, \"YYYY-MM-DDTHH:mm:ss\"),\r\n    \"months\"\r\n  )\r\n  return months >= 24\r\n}\r\n\r\nexport const formatDate = (datetime, locale) => {\r\n  if (locale === \"en\") {\r\n    return moment(datetime, \"YYYY-MM-DDTHH:mm:ss\")\r\n      .locale(\"en\")\r\n      .format(\"MMM DD, YYYY\")\r\n  }\r\n  let formatted = moment(datetime, \"YYYY-MM-DDTHH:mm:ss\")\r\n    .locale(\"pt-br\")\r\n    .format(\"MMM DD, YYYY\")\r\n\r\n  return `${formatted[0].toUpperCase()}${formatted.slice(1)}`\r\n}\r\n"],"sourceRoot":""}